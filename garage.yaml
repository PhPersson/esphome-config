substitutions:
  devicename: garage
  upper_devicename: Garageports√∂ppnare

esphome:
  name: $devicename
  platform: ESP8266
  board: esp01_1m
  project: 
    name: PhPersson.garage
    version: "0.1.0"
captive_portal:

# Enable logging
logger:

# Enable Home Assistant API (if available i.e. reboot_timeout=0s)
api:

ota:
  platform: esphome
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:

web_server:
  version: 3

status_led:
  pin:
    number: GPIO2 # blue led
    inverted: true #off when ok

dashboard_import:
  package_import_url: github://PhPersson/esphome-config/garage.yaml


switch:
  # Relay (has red led hardwired; relay on = led on)
  - platform: gpio
    id: relay
    pin: GPIO4
    restore_mode: RESTORE_DEFAULT_OFF

  # green led
  - platform: gpio
    pin: GPIO13
    id: green_led
    inverted: false
    restore_mode: RESTORE_DEFAULT_ON

  #  # blue led (if _not_ used for status led)
  #  - platform: gpio
  #    pin: GPIO2
  #    id: blue_led
  #    inverted: true
  #    restore_mode: RESTORE_DEFAULT_OFF

  # Switch template to link relay and green led states
  # green led is on when relay is off
  - platform: template
    id: "${devicename}_relay"
    name: $upper_devicename
    lambda: |-
      if (id(relay).state) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - switch.turn_off:
          id: green_led
      - switch.turn_on: #also turns red led on
          id: relay
    turn_off_action:
      - switch.turn_on:
          id: green_led
      - switch.turn_off: #also turns red led off
          id: relay

# Button
binary_sensor:
  - platform: gpio
    id: button
    pin:
      number: GPIO12
      mode: INPUT_PULLUP
      inverted: True
    on_press:
      - switch.toggle: "${devicename}_relay"
